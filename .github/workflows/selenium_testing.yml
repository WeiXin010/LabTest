name: React Selenium Testing

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-modules

      - name: Install frontend dependencies
        run: npm install --prefix ./frontend

      - name: Build React app
        run: npm run build --prefix ./frontend

      - name: Prepare artifacts
        run: |
          tar -czvf frontend-build.tar.gz -C frontend/dist .
          ls -l

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend-build.tar.gz

  test:
    needs: build
    runs-on: ubuntu-latest

    container:
      image: node:20
      options: --network-alias=testserver

    env:
      APP_URL: http://testserver:5173
      SELENIUM_REMOTE_URL: http://selenium:4444/wd/hub

    services:
      selenium:
        image: selenium/standalone-chrome
        ports:
          - 4444:4444
        options: >-
          --health-cmd="curl -f http://localhost:4444/wd/hub/status || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Download built frontend
        uses: actions/download-artifact@v4
        with:
          name: frontend-build

      - name: Extract frontend build
        run: |
          mkdir -p frontend/dist
          tar -xzvf frontend-build.tar.gz -C frontend/dist
          ls -l frontend/dist

      - name: Start Vite preview server
        run: |
          npx vite preview --port 5173 --strictPort --host &
          sleep 5

      - name: Wait for Vite server to start
        run: |
          until curl -s $APP_URL > /dev/null; do
            echo "Waiting for Vite server..."
            sleep 2
          done

      - name: Wait for Selenium server to be ready
        run: |
          for i in {1..10}; do
            if curl -s $SELENIUM_REMOTE_URL/status | grep -q '"ready":true'; then
              echo "Selenium is ready!"
              break
            else
              echo "Waiting for Selenium..."
              sleep 3
            fi
          done

      - name: Run Selenium tests
        run: node ./frontend/selenium_testing/login_testing.js

